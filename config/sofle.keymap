/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/*
 * Temporarily here because nice nano v2 spi is not defined on ZMK Yet
 * Source: https://github.com/zmkfirmware/zmk/blob/main/app/boards/shields/reviung41/boards/nice_nano.overlay
 * GitHub Issue: https://github.com/zmkfirmware/zmk/issues/885
 */

#include <dt-bindings/led/led.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&pinctrl {
    spi3_default: spi3_default {
        group1 { psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>; };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 8)>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";
    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */

        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */

        chain-length = <30>;
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};

/ {
    chosen { zmk,underglow = &led_strip; };
};

/* END temporary RGB support section */

/ {
    combos {
        compatible = "zmk,combos";

        left1 {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <17 16>;
        };

        left2 {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <29 28>;
        };

        left3 {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <41 40>;
        };

        right1 {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <18 19>;
        };

        right2 {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <30 31>;
        };

        right3 {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <44 45>;
        };

        co1 {
            bindings = <&kp PLUS>;
            key-positions = <17 18>;
        };

        co2 {
            bindings = <&kp MINUS>;
            key-positions = <29 30>;
        };

        co3 {
            bindings = <&kp UNDERSCORE>;
            key-positions = <41 44>;
        };

        co4 {
            bindings = <&kp EQUAL>;
            key-positions = <5 6>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                         |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                         |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                         |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |        | ExtPw |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |        | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESC    &kp N1  &kp N2     &kp N3    &kp N4        &kp N5                         &kp N6     &kp N7     &kp N8    &kp N9     &kp N0      &kp BACKSPACE
&kp TAB    &kp Q   &kp W      &kp E     &kp R         &kp T                          &kp Y      &kp U      &kp I     &kp O      &kp P       &kp ENTER
&kp ENTER  &kp A   &kp S      &kp D     &kp F         &kp G                          &kp H      &kp J      &kp K     &kp L      &kp SEMI    &kp SQT
&kp LSHFT  &kp Z   &kp X      &kp C     &kp V         &kp B      &kp UP    &kp DOWN  &kp B      &kp N      &kp M     &kp COMMA  &kp PERIOD  &kp SLASH
                   &kp LCTRL  &kp LALT  &kp LEFT_WIN  &kp SPACE  &mo 1     &mo 2     &kp ENTER  &kp RCTRL  &kp RALT  &kp RGUI
            >;

            sensor-bindings =
                <&inc_dec_kp DOWN UP>,
                <&inc_dec_kp RIGHT LEFT_ARROW>;
        };

        lower_layer {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp GRAVE  &kp F1     &kp F2     &kp F3     &kp F4     &kp F5                       &kp F6     &kp F7    &kp F8           &kp F9     &kp F10   &kp F11
&kp TILDE  &kp N1     &kp F9     &kp LC(W)  &kp LG(E)  &kp LC(A)                    &kp N6     &kp N7    &kp N8           &kp N9     &kp N0    &kp F12
&trans     &kp EXCL   &kp LC(S)  &kp LC(D)  &kp LC(F)  &kp LC(C)                    &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR   &kp RPAR  &kp PIPE
&trans     &kp EQUAL  &kp LC(Z)  &kp F2     &kp LC(N)  &kp LC(V)  &trans    &trans  &kp LBKT   &kp RBKT  &kp SEMI         &kp COLON  &kp BSLH  &trans
                      &trans     &trans     &trans     &trans     &trans    &trans  &trans     &trans    &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                 |      |      |       |      |       |       |
            // |     | INS  | PSCR | GUI   |       |      |                 | PGUP |      |   ^   |      |       |       |
            // |     | ALT  | CTRL | SHIFT |       | CAPS |                 | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |     | UNDO | CUT  | COPY  | PASTE |      |      |   | RGB  |      |      |       |      |       |       |
            //              |      |       |       |      |      |   |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &trans     &trans        &trans        &trans        &trans   &trans
&trans      &kp INS       &kp PSCRN     &kp K_CMENU   &trans        &trans                                   &kp PG_UP  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp N0   &trans
&trans      &kp LALT      &kp LCTRL     &kp LSHFT     &trans        &kp CLCK                                 &kp PG_DN  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp DEL  &kp BSPC
&trans      &kp K_UNDO    &kp K_CUT     &kp K_COPY    &kp K_PASTE   &trans        &trans    &rgb_ug RGB_TOG  &trans     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans   &trans
                          &trans        &trans        &trans        &trans        &trans    &trans           &trans     &kp NUMBER_0  &kp NUMBER_0  &kp DOT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
